<?xml version="1.0" encoding="UTF-8"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2007-2012 Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.forge</groupId>
    <artifactId>forge-parent</artifactId>
    <version>12</version>
  </parent>

  <groupId>org.sonatype.nexus.obr</groupId>
  <artifactId>nexus-obr</artifactId>
  <version>2.0.3-SNAPSHOT</version>

  <packaging>pom</packaging>

  <name>Nexus OBR (Parent)</name>

  <licenses>
    <license>
      <name>Eclipse Public License</name>
      <url>http://www.eclipse.org/legal/epl-v10.html</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com/sonatype/nexus-obr-plugin.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/sonatype/nexus-obr-plugin.git</developerConnection>
    <url>http://github.com/sonatype/nexus-obr-plugin</url>
  </scm>

  <modules>
    <module>nexus-obr-plugin</module>
    <module>nexus-obr-testsuite</module>
  </modules>

  <properties>
    <nexus.version>2.2</nexus.version>
    <applifecycle.version>1.6</applifecycle.version>

    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
    <test.log.pattern>%date %level [%thread%X{DC}] %logger - %msg%n</test.log.pattern>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- Real dependency -->
      <dependency>
        <groupId>org.apache.felix</groupId>
        <artifactId>org.osgi.service.obr</artifactId>
        <version>1.0.2</version>
      </dependency>

      <!-- Nexus dependencies -->
      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-rest-api</artifactId>
        <version>${nexus.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- AllInOne for UTs -->
      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-plugin-test-api</artifactId>
        <version>${nexus.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- More for UTs -->
      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-app</artifactId>
        <version>${nexus.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-proxy</artifactId>
        <version>${nexus.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-configuration</artifactId>
        <version>${nexus.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>

      <!-- AllInOne for ITs -->
      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-test-harness-launcher</artifactId>
        <version>${nexus.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Other test stuff -->
      <dependency>
        <groupId>org.apache.felix</groupId>
        <artifactId>org.apache.felix.main.distribution</artifactId>
        <version>3.2.2</version>
        <classifier>project</classifier>
        <type>tar.gz</type>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>apache-maven</artifactId>
        <version>3.0.4</version>
        <classifier>bin</classifier>
        <type>zip</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-testsuite-support</artifactId>
        <version>${nexus.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.shared</groupId>
        <artifactId>maven-verifier</artifactId>
        <version>1.3</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit-dep</artifactId>
          </exclusion>
          <exclusion>
            <artifactId>junit</artifactId>
            <groupId>junit</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- TODO Drop this dependency when we have proper client for repository -->
      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-test-utils</artifactId>
        <version>${nexus.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-oss-webapp</artifactId>
        <type>zip</type>
        <classifier>bundle</classifier>
        <version>${nexus.version}</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus.plugins</groupId>
        <artifactId>nexus-obr-plugin</artifactId>
        <type>nexus-plugin</type>
        <version>2.0.3-SNAPSHOT</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <testResources>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*</include>
        </includes>
      </testResource>
      <testResource>
        <directory>${project.basedir}/src/test/filtered-resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*</include>
        </includes>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12</version>
          <configuration>
            <failIfNoTests>false</failIfNoTests>
            <redirectTestOutputToFile>${maven.test.redirectTestOutputToFile}</redirectTestOutputToFile>
            <!-- force use of property -->
            <forkMode>once</forkMode>
            <argLine>-ea</argLine>
            <workingDirectory>${project.build.directory}</workingDirectory>
            <systemPropertyVariables>
              <java.awt.headless>true</java.awt.headless>
            </systemPropertyVariables>
            <excludes>
              <exclude>**/Abstract*.java</exclude>
              <exclude>**/Test*.java</exclude>
            </excludes>
            <includes>
              <include>**/*Test.java</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.12</version>
          <configuration>
            <failIfNoTests>false</failIfNoTests>
            <redirectTestOutputToFile>${maven.test.redirectTestOutputToFile}</redirectTestOutputToFile>
            <!--
            For each test, so that we can use the process timeout.
            forkMode=always will cause duplicate "T E S T S" header to be rendered :-(
            -->
            <forkMode>always</forkMode>
            <argLine>-ea</argLine>
            <workingDirectory>${project.build.directory}</workingDirectory>
            <systemPropertyVariables>
              <java.awt.headless>true</java.awt.headless>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <!-- Manually run with: mvn clean com.mycila.maven-license-plugin:maven-license-plugin:1.9.0:format -->
        <plugin>
          <groupId>com.mycila.maven-license-plugin</groupId>
          <artifactId>maven-license-plugin</artifactId>
          <version>1.9.0</version>
          <configuration>
            <header>header-eplv1.txt</header>
            <encoding>UTF-8</encoding>
            <strictCheck>true</strictCheck>
            <useDefaultExcludes>false</useDefaultExcludes>
            <includes>
              <include>**/*.java</include>
              <include>**/*.vm</include>
              <include>**/*.xml</include>
              <include>**/*.groovy</include>
              <include>**/*.aj</include>
              <include>**/*.css</include>
              <include>**/*.html</include>
              <include>**/*.js</include>
            </includes>
            <excludes>
              <exclude>**/target/**</exclude>
              <!-- grid makes this directory -->
              <exclude>.maven/**</exclude>
              <!-- eclipse makes this directory -->
              <exclude>**/.settings/**</exclude>
              <!-- netbeans adds these -->
              <exclude>**/nbactions*.xml</exclude>
              <exclude>**/nb-configuration.xml</exclude>
              <!-- IntelliJ IDEA project directory-->
              <exclude>**/.idea/**</exclude>
              <!-- IT resources -->
              <exclude>**/it-resources/**</exclude>
            </excludes>
            <mapping>
              <vm>XML_STYLE</vm>
              <groovy>JAVADOC_STYLE</groovy>
              <aj>JAVADOC_STYLE</aj>
            </mapping>
            <properties>
              <year>2012</year>
            </properties>
            <!-- this is important for multi-module project -->
            <aggregate>true</aggregate>
          </configuration>
          <goals>
            <goal>check</goal>
          </goals>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
